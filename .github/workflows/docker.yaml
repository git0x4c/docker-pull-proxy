name: Docker

on:
  push:
    branches:
      - master

jobs:
  build:
    name: Build and push image to registry
    runs-on: ubuntu-latest
    steps:
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v3

      - name: Check out code
        uses: actions/checkout@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ccr.ccs.tencentyun.com
          username: ${{ secrets.QCLOUDUSERNAME }}
          password: ${{ secrets.QCLOUDPASSWORD }}

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y jq

      - name: Build and push image to registry
        run: |
          while read -r target_image source_image; do
            # Check if the target image already exists locally
            if docker inspect --type=image $target_image > /dev/null 2>&1; then
              echo "Image $target_image exists locally. Checking MD5..."
              local_digest=$(docker inspect --format='{{index .RepoDigests 0}}' $target_image | cut -d'@' -f2)
              remote_digest=$(skopeo inspect docker://$source_image | jq -r '.Digest')

              if [ "$local_digest" = "$remote_digest" ]; then
                echo "Image $target_image is up-to-date. Skipping..."
                continue
              else
                echo "Image $target_image is outdated. Updating..."
              fi
            else
              echo "Image $target_image does not exist locally. Pulling and updating..."
            fi

            # Pull the source image
            docker pull $source_image
            # Tag the source image to the target image
            docker tag $source_image $target_image
            # Push the target image to the registry
            docker push $target_image
          done < trigger.txt
        env:
          REGISTRY: ccr.ccs.tencentyun.com
